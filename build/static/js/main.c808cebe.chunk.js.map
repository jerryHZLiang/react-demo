{"version":3,"sources":["serviceWorker.js","TodoInput.js","TodoItem.js","learnCloud.js","UserDialog.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","TodoInput","react_default","a","createElement","type","value","this","props","content","className","onChange","changeTitle","bind","onKeyPress","submit","e","key","onSubmit","Component","TodoItem","checked","todo","status","toggle","title","onClick","delete","onToggle","onDelete","AV","init","appId","appKey","signUp","username","password","successFn","errorFn","user","User","setUsername","setPassword","then","loginedUser","AVUser","Object","objectSpread","id","attributes","call","error","UserDialog","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","selected","formData","setState","target","preventDefault","_this$state$formData","console","log","stateCopy","JSON","parse","stringify","signUpForm","changeFormData","signInForm","signIn","switch","App","newTodo","todoList","_this2","todos","filter","item","deleted","map","index","TodoItem_TodoItem","TodoInput_TodoInput","addTodo","UserDialog_UserDialog","event","push","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uRAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kGChBgBC,4MAElB,OAAOC,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,MAAOC,KAAKC,MAAMC,QAC1CC,UAAU,YACVC,SAAUJ,KAAKK,YAAYC,KAAKN,MAChCO,WAAYP,KAAKQ,OAAOF,KAAKN,uCAE1BS,GACQ,UAAVA,EAAEC,KACHV,KAAKC,MAAMU,SAASF,uCAGZA,GACVT,KAAKC,MAAMG,SAASK,UAbgBG,cCDlBC,mLAElB,OACIlB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,WAAWgB,QAAoC,cAA3Bd,KAAKC,MAAMc,KAAKC,OAC9CZ,SAAUJ,KAAKiB,OAAOX,KAAKN,QAF7B,IAEuCA,KAAKC,MAAMc,KAAKG,MACrDvB,EAAAC,EAAAC,cAAA,UAAQsB,QAASnB,KAAKoB,OAAOd,KAAKN,OAAlC,gDAICS,GACLT,KAAKC,MAAMoB,SAASZ,EAAGT,KAAKC,MAAMc,qCAE/BN,GACLT,KAAKC,MAAMqB,SAASb,EAAGT,KAAKC,MAAMc,aAdCH,4CCEvCW,IAAGC,KAAK,CACNC,MAHW,oCAIXC,OAHY,6BAKCH,EAAf,EAEO,SAASI,EAAOC,EAAUC,EAAUC,EAAWC,GAEnD,IAAIC,EAAO,IAAIT,IAAGU,KAElBD,EAAKE,YAAYN,GAEjBI,EAAKG,YAAYN,GAEjBG,EAAKL,SAASS,KAAK,SAAUC,GAC3B,IAUuBC,EAVnBN,GAUmBM,EAVMD,EAWxBE,OAAAC,EAAA,EAAAD,CAAA,CACLE,GAAIH,EAAOG,IACRH,EAAOI,aAZVZ,EAAUa,KAAK,KAAMX,IACpB,SAAUY,GACXb,EAAQY,KAAK,KAAMC,SClBHC,cACjB,SAAAA,EAAY5C,GAAM,IAAA6C,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAvC,KAAA6C,IACdC,EAAAP,OAAAS,EAAA,EAAAT,CAAAvC,KAAAuC,OAAAU,EAAA,EAAAV,CAAAM,GAAAF,KAAA3C,KAAMC,KACDiD,MAAQ,CACXC,SAAU,SACVC,SAAU,CACRxB,SAAU,GACVC,SAAU,KANAiB,sEAUTrC,GACLT,KAAKqD,SAAS,CACZF,SAAU1C,EAAE6C,OAAOvD,uCAGhBU,GACLA,EAAE8C,iBADK,IAAAC,EAEoBxD,KAAKkD,MAAME,SAOtCzB,EATO6B,EAEF5B,SAFE4B,EAEQ3B,SACD,SAACG,GACbyB,QAAQC,IAAI1B,IAEF,SAACY,GACXa,QAAQC,IAAId,oCAITnC,2CACQC,EAAKD,GAClB,IAAIkD,EAAYC,KAAKC,MAAMD,KAAKE,UAAU9D,KAAKkD,QAC7CS,EAAUP,SAAS1C,GAAOD,EAAE6C,OAAOvD,MACnCC,KAAKqD,SAASM,oCAGpB,IAAII,EACApE,EAAAC,EAAAC,cAAA,QAAMM,UAAU,SAASQ,SAAUX,KAAK2B,OAAOrB,KAAKN,OAApD,IACEL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,MAAOC,KAAKkD,MAAME,SAASxB,SAC9CxB,SAAUJ,KAAKgE,eAAe1D,KAAKN,KAAM,eAE3CL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,WAAWC,MAAOC,KAAKkD,MAAME,SAASvB,SAClDzB,SAAUJ,KAAKgE,eAAe1D,KAAKN,KAAM,eAE3CL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACbR,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UAAb,kBAIFmE,EACFtE,EAAAC,EAAAC,cAAA,QAAMM,UAAU,SAASQ,SAAUX,KAAKkE,OAAO5D,KAAKN,OAApD,IACEL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,MAAOC,KAAKkD,MAAME,SAASxB,SAC9CxB,SAAUJ,KAAKgE,eAAe1D,KAAKN,KAAK,eAE1CL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,WAAWC,MAAOC,KAAKkD,MAAME,SAASvB,SAClDzB,SAAUJ,KAAKgE,eAAe1D,KAAKN,KAAM,eAE3CL,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACbR,EAAAC,EAAAC,cAAA,UAAQC,KAAK,UAAb,kBAIR,OACEH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sBACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACfR,EAAAC,EAAAC,cAAA,OAAKO,SAAUJ,KAAKmE,OAAO7D,KAAKN,OAChCL,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,QAAQC,MAAM,SAASe,QAAiC,WAAxBd,KAAKkD,MAAMC,WAA9D,iBACAxD,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,QAAQC,MAAM,SAASe,QAAiC,WAAxBd,KAAKkD,MAAMC,WAA9D,kBAEExD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACU,WAAxBH,KAAKkD,MAAMC,SAAwBY,EAAa,KACxB,WAAxB/D,KAAKkD,MAAMC,SAAwBc,EAAa,eA7EnBrD,aC0EzBwD,cApEb,SAAAA,EAAYnE,GAAM,IAAA6C,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAvC,KAAAoE,IAChBtB,EAAAP,OAAAS,EAAA,EAAAT,CAAAvC,KAAAuC,OAAAU,EAAA,EAAAV,CAAA6B,GAAAzB,KAAA3C,KAAMC,KACDiD,MAAQ,CACXmB,QAAS,GACTC,SAAS,IAJKxB,wEAQT,IAAAyB,EAAAvE,KACHwE,EAAQxE,KAAKkD,MAAMoB,SACpBG,OAAO,SAACC,GAAD,OAAUA,EAAKC,UACtBC,IAAI,SAACF,EAAKG,GACX,OACElF,EAAAC,EAAAC,cAAA,MAAIa,IAAKmE,GACPlF,EAAAC,EAAAC,cAACiF,EAAD,CAAU/D,KAAM2D,EAAMrD,SAAUkD,EAAKtD,OAAOX,KAAKiE,GACjDjD,SAAUiD,EAAKnD,OAAOd,KAAKiE,QAKjC,OACE5E,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gBACfR,EAAAC,EAAAC,cAACkF,EAAD,CAAW7E,QAASF,KAAKkD,MAAMmB,QAC/BjE,SAAUJ,KAAKK,YAAYC,KAAKN,MAChCW,SAAUX,KAAKgF,QAAQ1E,KAAKN,SAE9BL,EAAAC,EAAAC,cAAA,MAAIM,UAAU,YACXqE,GAEH7E,EAAAC,EAAAC,cAACoF,EAAD,oFASGxE,EAAGM,GACRA,EAAKC,OAAyB,cAAhBD,EAAKC,OAAyB,GAAK,YACjDhB,KAAKqD,SAASrD,KAAKkD,2CAETgC,GACVlF,KAAKqD,SAAS,CACZgB,QAASa,EAAM5B,OAAOvD,MACtBuE,SAAUtE,KAAKkD,MAAMoB,2CAGjBY,GACNlF,KAAKkD,MAAMoB,SAASa,KAAK,CACvB1C,GAoBJA,GAAM,EAnBFvB,MAAOgE,EAAM5B,OAAOvD,MACpBiB,OAAQ,KACR2D,SAAS,IAEX3E,KAAKqD,SAAS,CACZgB,QAAS,GACTC,SAAUtE,KAAKkD,MAAMoB,0CAGlBY,EAAOnE,GACZA,EAAK4D,SAAU,EACf3E,KAAKqD,SAASrD,KAAKkD,cAjELtC,aAuEd6B,EAAK,ECzET2C,IAASC,OACL1F,EAAAC,EAAAC,cAACyF,EAAD,MACFC,SAASC,eAAe,SNyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvD,KAAK,SAAAwD,GACjCA,EAAaC","file":"static/js/main.c808cebe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './TodoInput.css';\n export default class TodoInput extends Component {\n  render(){\n    return <input type=\"text\" value={this.props.content}\n      className=\"TodoInput\"\n      onChange={this.changeTitle.bind(this)}\n      onKeyPress={this.submit.bind(this)}/>\n  }\n  submit(e){\n    if(e.key === 'Enter'){\n      this.props.onSubmit(e)\n    }\n  }\n  changeTitle(e){\n    this.props.onChange(e)\n  }\n}\n","import React, { Component } from 'react';\n export default class TodoItem extends Component {\n  render(){\n    return (\n        <div>\n        <input type=\"checkbox\" checked={this.props.todo.status === 'completed'}\n          onChange={this.toggle.bind(this)}/> {this.props.todo.title}\n          <button onClick={this.delete.bind(this)}>删除</button>\n        </div>\n      )\n    }\n    toggle(e){\n      this.props.onToggle(e, this.props.todo)\n  }\n  delete(e){\n    this.props.onDelete(e, this.props.todo)\n  }\n}","import AV from 'leancloud-storage';\nvar APP_ID = '8obWURMfq0Ib9UAsArl4N5bq-gzGzoHsz';\nvar APP_KEY = 'sWejjAhhN5048WSdX7BF4Idd';\nAV.init({\n  appId: APP_ID,\n  appKey: APP_KEY\n})\nexport default AV;\n\nexport function signUp(username, password, successFn, errorFn){\n    // 新建 AVUser 对象实例\n   var user = new AV.User();\n   // 设置用户名\n   user.setUsername(username);\n   // 设置密码\n   user.setPassword(password);\n   // 设置邮箱\n   user.signUp().then(function (loginedUser) {\n     let user = getUserFromAVUser(loginedUser);\n     successFn.call(null, user);\n   }, function (error) {\n     errorFn.call(null, error);\n   })\n \n   return undefined;\n \n }\n \n function getUserFromAVUser(AVUser){\n   return {\n     id: AVUser.id,\n     ...AVUser.attributes\n   }\n }","import React, { Component } from 'react';\nimport './UserDialog.css';\nimport {signUp} from './learnCloud';\nexport default class UserDialog extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n          selected: 'signUp',\n          formData: {\n            username: '',\n            password: '',\n          }\n        }\n      }\n      switch(e){\n        this.setState({\n          selected: e.target.value\n        })\n      }\n      signUp(e){\n        e.preventDefault()\n        let {username, password} = this.state.formData\n        let success = (user)=>{\n          console.log(user)\n        }\n        let error = (error)=>{\n          console.log(error)\n        }\n        signUp(username, password, success, error)\n      }\n      signIn(e){}\n      changeFormData(key, e){\n        let stateCopy = JSON.parse(JSON.stringify(this.state))  // 用 JSON 深拷贝\n          stateCopy.formData[key] = e.target.value\n          this.setState(stateCopy)\n      }\n  render(){\n    let signUpForm = (\n        <form className=\"signUp\" onSubmit={this.signUp.bind(this)}> {/* 注册*/}\n          <div className=\"row\">\n            <label>用户名</label> \n            <input type=\"text\" value={this.state.formData.username}\n            onChange={this.changeFormData.bind(this, 'username')}/>\n          </div>\n          <div className=\"row\">\n            <label>密码</label>\n            <input type=\"password\" value={this.state.formData.password} \n            onChange={this.changeFormData.bind(this, 'password')}/>\n          </div>\n          <div className=\"row actions\">\n            <button type=\"submit\">注册</button>\n          </div>\n        </form>\n      )\n      let signInForm = (\n        <form className=\"signIn\" onSubmit={this.signIn.bind(this)}> {/* 登录*/}\n          <div className=\"row\">\n            <label>用户名</label>\n            <input type=\"text\" value={this.state.formData.username}\n            onChange={this.changeFormData.bind(this,'username')}/>\n          </div>\n          <div className=\"row\">\n            <label>密码</label>\n            <input type=\"password\" value={this.state.formData.password}\n            onChange={this.changeFormData.bind(this, 'password')}/>\n          </div>\n          <div className=\"row actions\">\n            <button type=\"submit\">登录</button>\n          </div>\n        </form>\n      ) \n    return (\n      <div className=\"UserDialog-Wrapper\">\n        <div className=\"UserDialog\">\n        <nav onChange={this.switch.bind(this)}>\n        <label><input type=\"radio\" value=\"signUp\" checked={this.state.selected === 'signUp'}/> 注册</label>\n        <label><input type=\"radio\" value=\"signIn\" checked={this.state.selected === 'signIn'}/> 登录</label>\n        </nav>\n          <div className=\"panes\">\n          {this.state.selected === 'signUp' ? signUpForm : null}\n          {this.state.selected === 'signIn' ? signInForm : null}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'normalize.css';\nimport './reset.css';\nimport TodoInput from './TodoInput';\nimport TodoItem from './TodoItem';\nimport UserDialog from './UserDialog'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      newTodo: '',\n      todoList:[]\n    }\n  }\n\n  render() {\n    let todos = this.state.todoList\n      .filter((item)=> !item.deleted)\n      .map((item,index)=>{\n      return ( \n        <li key={index}>\n          <TodoItem todo={item} onToggle={this.toggle.bind(this)}\n          onDelete={this.delete.bind(this)}/>\n        </li>\n      )\n    })\n  \n    return (\n      <div className=\"App\">\n        <h1>我的todoList</h1>\n        <div className=\"inputWrapper\">\n        <TodoInput content={this.state.newTodo} \n        onChange={this.changeTitle.bind(this)}\n        onSubmit={this.addTodo.bind(this)} />\n      </div>\n      <ol className=\"todoList\">\n        {todos}\n      </ol>\n      <UserDialog />\n      </div>\n    )\n  }\n\n  componentDidUpdate(){\n    \n  }\n\n  toggle(e, todo){\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state) \n  }\n  changeTitle(event){\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n  addTodo(event){\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n  delete(event, todo){\n    todo.deleted = true\n    this.setState(this.state) \n  }\n}\n\nexport default App;\n\nlet id = 0\n function idMaker(){\n  id += 1\n  return id\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}